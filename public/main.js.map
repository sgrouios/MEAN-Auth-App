{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/validators/username-validator.ts","./src/app/services/local-storage.service.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/guards/un-auth.guard.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/validators/check-email-validator.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/utils/exclusion-header.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/app/services/token.service.ts","./src/app/interceptors/token-interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-5 my-4 card-bg rounded-3 text-center\">\n  <div class=\"container-fluid py-5\">\n    <h1 class=\"display-5 fw-bold\">MEAN Authentication App</h1>\n    <p class=\"fs-4\">\n        Welcome to our custom MEAN authentication application built from scratch\n    </p>\n    <a class=\"btn btn-info mx-1\" [routerLink]=\"['/register']\">Register</a>\n    <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col\">\n    <h3>Express Backend</h3>\n    <p>\n      A rock solid Node.js/Express server using Mongoose to organise models and\n      query the database\n    </p>\n  </div>\n  <div class=\"col\">\n    <h3>Angular-CLI</h3>\n    <p>\n      Angular-CLI to generate components, services and more. Local dev server\n      and easy compilation\n    </p>\n  </div>\n  <div class=\"col\">\n    <h3>JWT Tokens</h3>\n    <p>\n      Full featured authentication using JSON web tokens. Login and store user\n      data\n    </p>\n  </div>\n</div>\n","import {\n  AbstractControl,\n  AsyncValidatorFn,\n  ValidationErrors,\n} from '@angular/forms';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { DoesExist } from '../models/does-exist';\nimport { UserService } from '../services/user.service';\n\nexport class CheckUsernameValidator {\n  static checkUsername(userService: UserService): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors> => {\n      return userService.checkUsername(control.value).pipe(\n        map((result: DoesExist) => (!result.doesExist ? {} : { taken: true })),\n        catchError(() => {\n          console.error('Check username call error');\n          return EMPTY;\n        })\n      );\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenUser } from '../models/tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  private readonly ACCESS_TOKEN = 'accessToken';\n  private readonly REFRESH_TOKEN = 'refreshToken';\n  private readonly USER = 'user';\n\n  setAccessToken(accessToken: string): void {\n    localStorage.setItem(this.ACCESS_TOKEN, accessToken);\n  }\n\n  getAccessToken(): string  {\n    return localStorage.getItem(this.ACCESS_TOKEN) as string;\n  }\n\n  setRefreshToken(refreshToken: string): void {\n    localStorage.setItem(this.REFRESH_TOKEN, refreshToken);\n  }\n\n  getRefreshToken(): string  {\n    return localStorage.getItem(this.REFRESH_TOKEN) as string;\n  }\n\n  removeTokens(): void {\n    localStorage.removeItem(this.ACCESS_TOKEN);\n    localStorage.removeItem(this.REFRESH_TOKEN);\n  }\n\n  setUserData(user: TokenUser): void {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  removeUserData(): void {\n    localStorage.removeItem(this.USER);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { EMPTY, Subject } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { UserProfile } from 'src/app/models/user-profile';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  private readonly userProfileSubject$ = new Subject<UserProfile>();\r\n  userProfile$ = this.userProfileSubject$.asObservable();\r\n\r\n  constructor(private authService: AuthService, private router: Router, private notifier: NotifierService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile()\r\n    .pipe(\r\n      tap((user: UserProfile) => this.userProfileSubject$.next(user)),\r\n      catchError(() => {\r\n        this.notifier.notify('error', 'Could not get profile data');\r\n        return EMPTY;\r\n      })\r\n    ).subscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"userProfile$ | async as user\">\r\n    <h2 class=\"page-header\">{{user.name}}</h2>\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\r\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\r\n    </ul>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { TokenService } from '../services/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnAuthGuard implements CanActivate {\n  \n  constructor(private tokenService: TokenService){}\n\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.tokenService.isLoggedIn()\n    .pipe(\n      map((bool) => {\n        return !bool\n      })\n    );\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your dashboard</p>","import { AsyncValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport { Observable, EMPTY } from \"rxjs\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { DoesExist } from \"../models/does-exist\";\nimport { UserService } from \"../services/user.service\";\n\nexport class CheckEmailValidator {\n    static checkEmail(userService: UserService): AsyncValidatorFn {\n        return (control: AbstractControl): Observable<ValidationErrors> => {\n          return userService.checkEmail(control.value).pipe(\n            map((result: DoesExist) => (!result.doesExist ? {} : { taken: true })),\n            catchError(() => {\n              console.error('Check email call error');\n              return EMPTY;\n            })\n          );\n        };\n      }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { take, tap } from 'rxjs/operators';\nimport { TokenService } from './services/token.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'angular-src';\n\n  constructor(private tokenService: TokenService) { }\n\n  ngOnInit(): void {\n    this.tokenService.rehydrateMemberLogin()\n    .pipe(\n      take(1),\n      tap((isLoggedIn) => this.tokenService.setLoginState(isLoggedIn))\n    ).subscribe();\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n  <notifier-container></notifier-container>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenService } from '../services/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private tokenService: TokenService){}\n\n  canActivate(): Observable<boolean> {\n    return this.tokenService.isLoggedIn();\n  }\n  \n}\n","import { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport class ExclusionHeader {\r\n    static addExclusionHeader(): { headers: HttpHeaders } {\r\n        return { headers: new HttpHeaders({ exclude_authorization: 'true'}) }\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\nimport { EMPTY } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { AuthenticateUser } from 'src/app/models/authenticate-user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private notifier: NotifierService,\n              private tokenService: TokenService){}\n\n  form = this.initForm();\n\n  initForm(): FormGroup {\n    return new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  onLoginSubmit(): void {\n    if(this.form.valid){\n      this.authService.authenticateUser(<AuthenticateUser>this.form.value)\n      .pipe(\n        tap(() => { \n          this.notifier.notify('success', 'User successfully authenticated');\n          this.tokenService.setLoginState(true);\n          this.router.navigate(['dashboard']);\n        }),\n        catchError(() => \n        { \n          this.notifier.notify('error', 'User could not be authenticated');\n          return EMPTY; \n        })\n      ).subscribe();\n    }\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h2 class=\"page-header\">Login</h2>\n    <form [formGroup]=\"form\">\n      <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control border border-secondary\"\n          id=\"username\"\n          aria-describedby=\"nameHelp\"\n          formControlName=\"username\"\n        />\n        <p *ngIf=\"form.controls.username.touched && form.controls.username.errors?.required\" class=\"text-danger\">Please enter a usernamename</p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control border border-secondary\"\n          id=\"password\"\n          aria-describedby=\"passwordHelp\"\n          formControlName=\"password\"\n        />\n        <p *ngIf=\"form.controls.password.touched && !form.controls.password.valid\" class=\"text-danger\">Please enter a password</p>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!this.form.valid\" (click)=\"onLoginSubmit()\">Login</button>\n  </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { EMPTY } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { CheckEmailValidator } from 'src/app/validators/check-email-validator';\r\nimport { CheckUsernameValidator } from 'src/app/validators/username-validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  form: FormGroup = this.initForm();\r\n\r\n  constructor(private userService: UserService,\r\n              private notifier: NotifierService,\r\n              private authService: AuthService,\r\n              private router: Router) {}\r\n\r\n  initForm(): FormGroup {\r\n    return new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      username: new FormControl('', \r\n      Validators.required, \r\n      CheckUsernameValidator.checkUsername(this.userService)),\r\n      email: new FormControl('', [\r\n        Validators.required, \r\n        Validators.email],\r\n        CheckEmailValidator.checkEmail(this.userService)),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  onRegisterSubmit() : void {\r\n    if(this.form.valid){\r\n      const user = <User>this.form.value;\r\n      this.authService.registerUser(user)\r\n      .pipe(\r\n        catchError(() => {\r\n          this.notifier.notify('error', 'User could not be registered');\r\n          return EMPTY;\r\n        }),\r\n        tap(() => { \r\n          this.notifier.notify('success', 'User successfully registered');\r\n          this.router.navigate(['login']);\r\n        })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid mt-5\">\n  <h2 class=\"page-header\">Register</h2>\n  <form [formGroup]=\"form\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control border border-secondary\"\n        id=\"name\"\n        aria-describedby=\"nameHelp\"\n        formControlName=\"name\"\n      />\n      <p *ngIf=\"form.controls.name.touched && form.controls.name.errors?.required\" class=\"text-danger\">Please enter a name</p>\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <span *ngIf=\"this.form.controls.username.status === 'PENDING'\" class='spinner-border spinner-border-sm text-primary pull-right'></span>\n        <input\n          type=\"text\"\n          class=\"form-control border border-secondary\"\n          id=\"username\"\n          aria-describedby=\"usernameHelp\"\n          formControlName=\"username\"\n        >\n      <p *ngIf=\"form.controls.username.touched && form.controls.username.errors?.required\" class=\"text-danger\">Please enter a username</p>\n      <p *ngIf=\"form.controls.username.touched && form.controls.username.errors?.taken\" class=\"text-danger\">This username is taken. Choose another</p>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email address</label>\n      <span *ngIf=\"this.form.controls.email.status === 'PENDING'\" class='spinner-border spinner-border-sm text-primary pull-right'></span>\n      <input\n        type=\"email\"\n        class=\"form-control border border-secondary\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        formControlName=\"email\"\n      />\n      <p *ngIf=\"form.controls.email.touched && form.controls.email.errors?.required || form.controls.email.errors?.email\" class=\"text-danger\">Please enter a valid email</p>\n      <p *ngIf=\"form.controls.email.touched && form.controls.email.errors?.taken\" class=\"text-danger\">This email is taken. Choose another</p>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input\n        type=\"password\"\n        class=\"form-control border border-secondary\"\n        id=\"password\"\n        aria-describedby=\"passwordHelp\"\n        formControlName=\"password\"\n      />\n      <p *ngIf=\"form.controls.password.touched && !form.controls.password.valid\" class=\"text-danger\">Please enter a password</p>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!this.form.valid\" (click)=\"onRegisterSubmit()\">Submit</button>\n</form>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TokenInterceptor } from './interceptors/token-interceptor';\nimport { NotifierModule } from 'angular-notifier';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NotifierModule\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\nimport { EMPTY } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n\n  isLoggedIn$ = this.tokenService.isLoggedIn$;\n\n  constructor(private authService: AuthService,\n              private notifierService: NotifierService,\n              private localStorageService: LocalStorageService,\n              private router: Router,\n              private tokenService: TokenService) { }\n\n  onLogoutClick(): void {\n    this.authService.logout(this.localStorageService.getRefreshToken())\n    .pipe(\n      tap(() => this.tokenService.setLoginState(false)),\n      catchError(() => { \n        this.notifierService.notify('error', 'User could not be logged out');\n        return EMPTY;\n    }),\n    tap(() => \n    {\n      this.notifierService.notify('success', 'User successfully logged out');\n      this.router.navigate(['login']);\n    })\n    ).subscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark navbar-default bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n          <li class=\"nav-item\" [routerLinkActive]=\"['active-link']\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/']\">Home</a>\n          </li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n              <li *ngIf=\"(isLoggedIn$ | async)\" class=\"nav-item\" [routerLinkActive]=\"['active-link']\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n              </li>\n              <li *ngIf=\"(isLoggedIn$ | async)\" class=\"nav-item\" [routerLinkActive]=\"['active-link']\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/profile']\">Profile</a>\n              </li>\n              <li *ngIf=\"!(isLoggedIn$ | async)\" class=\"nav-item\" [routerLinkActive]=\"['active-link']\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/login']\">Login</a>\n              </li>\n              <li *ngIf=\"!(isLoggedIn$ | async)\" class=\"nav-item\" [routerLinkActive]=\"['active-link']\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/register']\">Register</a>\n              </li>\n              <li *ngIf=\"(isLoggedIn$ | async)\" class=\"nav-item\">\n                <a class=\"nav-link active\" aria-current=\"page\" (click)=\"onLogoutClick()\" role=\"button\">Logout</a>\n              </li>\n        </ul>   \n      </div>\n    </div>\n  </nav>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { AccessToken } from '../models/access-token';\nimport { AuthenticateUser } from '../models/authenticate-user';\nimport { Tokens } from '../models/tokens';\nimport { User } from '../models/user';\nimport { UserProfile } from '../models/user-profile';\nimport { ExclusionHeader } from '../utils/exclusion-header';\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  apiUrl = `${environment.apiUrl}/users`;\n\n  constructor(private http: HttpClient,\n              private localStorageService: LocalStorageService) {}\n\n  authenticateUser(authenticate: AuthenticateUser): Observable<Tokens> {\n    return this.http.post<Tokens>(`${this.apiUrl}/authenticate`, \n    authenticate, \n    ExclusionHeader.addExclusionHeader())\n    .pipe(\n      catchError((err) => throwError(err)),\n      tap((tokens: Tokens) => { \n        this.localStorageService.setAccessToken(tokens.accessToken);\n        this.localStorageService.setRefreshToken(tokens.refreshToken);\n        this.localStorageService.setUserData(tokens.user);\n      })\n      )\n  }\n\n  logout(refreshToken: string): Observable<string> {\n    return this.http.get<string>(`${this.apiUrl}/logout?refreshToken-${refreshToken}`)\n    .pipe(\n      catchError((err) => throwError(err)),\n      tap(() => {\n        this.localStorageService.removeTokens();\n        this.localStorageService.removeUserData();\n      })\n    )\n  }\n\n  refreshToken(refreshToken: string): Observable<AccessToken> {\n    return this.http.post<AccessToken>(`${this.apiUrl}/refresh`, { token: refreshToken})\n    .pipe(\n      catchError((err) => throwError(err)),\n      tap((token: AccessToken) => {\n        this.localStorageService.setAccessToken(token.token);\n        this.localStorageService.setUserData(token.user);\n      })\n    )\n  }\n\n  registerUser(user: User): Observable<string> {\n    return this.http\n      .post<string>(\n        `${this.apiUrl}/register`,\n        user,\n        ExclusionHeader.addExclusionHeader()\n      )\n      .pipe(catchError((err) => throwError(err)));\n  }\n\n  getProfile(): Observable<UserProfile> {\n    return this.http.get<UserProfile>(`${this.apiUrl}/profile`)\n    .pipe(\n      catchError((err) => throwError(err))\n    )\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { DoesExist } from '../models/does-exist';\nimport { ExclusionHeader } from '../utils/exclusion-header';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiUrl = `${environment.apiUrl}/users`;\n\n  constructor(private http: HttpClient) { }\n\n  checkUsername(username: string): Observable<DoesExist> {\n    return this.http.get<DoesExist>(`${this.apiUrl}/check-username?username=${username}`,\n    ExclusionHeader.addExclusionHeader())\n    .pipe(\n      catchError((err) => throwError(err))\n    );\n  }\n\n  checkEmail(email: string): Observable<DoesExist> {\n    return this.http.get<DoesExist>(`${this.apiUrl}/check-email?email=${email}`,\n    ExclusionHeader.addExclusionHeader())\n    .pipe(\n      catchError((err) => throwError(err))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AccessToken } from '../models/access-token';\r\nimport { Jwt } from '../models/jwt';\r\nimport { AuthService } from './auth.service';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  private isLoggedInSubject$ = new BehaviorSubject(false);\r\n  isLoggedIn$ = this.isLoggedInSubject$.asObservable();\r\n\r\n  constructor(private localStorageService: LocalStorageService,\r\n              private router: Router,\r\n              private authService: AuthService) { }\r\n\r\n  rehydrateMemberLogin(): Observable<boolean> {\r\n    return this.isLoggedIn();\r\n  }\r\n  \r\n  setLoginState(loggedIn: boolean): void {\r\n    this.isLoggedInSubject$.next(loggedIn);\r\n  }\r\n\r\n  isLoggedIn(): Observable<boolean> {\r\n    return this.getAccessToken(true)\r\n    .pipe(\r\n      map(() => true),\r\n      catchError(() => { \r\n        return of(false) \r\n      })\r\n    )\r\n  }\r\n\r\n  getAuthHeader(): Observable<string> {\r\n    return this.getAccessToken()\r\n    .pipe(\r\n      map((token: string) => `Bearer ${token}`)\r\n    )\r\n  }\r\n\r\n  getAccessToken(isSoft: boolean = false): Observable<string> {\r\n    const token = this.localStorageService.getAccessToken();\r\n    if(!token){\r\n      return this.errorHandler(new Error('No access token'), isSoft);\r\n    }\r\n    if(this.isTokenExpired(token)){\r\n      return this.getRefreshToken();\r\n    }\r\n    return of(token);\r\n  }\r\n\r\n  getRefreshToken(isSoft: boolean = false): Observable<string> {\r\n    const refreshToken = this.localStorageService.getRefreshToken();\r\n    if(!refreshToken){\r\n      return this.errorHandler(new Error('No refresh token'), isSoft);\r\n    }\r\n    if(this.isTokenExpired(refreshToken)){\r\n      return this.errorHandler(new Error('Refresh token expired'), isSoft);\r\n    }\r\n\r\n    return this.authService.refreshToken(refreshToken)\r\n    .pipe(\r\n      map((token: AccessToken) => token.token),\r\n      catchError(() => this.errorHandler(new Error('Token could not be refreshed'), isSoft))\r\n    )\r\n\r\n  }\r\n\r\n  errorHandler(err: Error, isSoft: boolean = false): Observable<string> {\r\n    this.localStorageService.removeTokens();\r\n    this.localStorageService.removeUserData();\r\n    if(!isSoft){\r\n      this.router.navigate(['login']);\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n  isTokenExpired(token: string): boolean {\r\n    let payload: Jwt;\r\n    try{\r\n      payload = (JSON.parse(atob(token.split('.')[1]))) as Jwt;\r\n    }\r\n    catch{\r\n      return false;\r\n    }\r\n    if(payload.exp < new Date().getTime() / 1000){\r\n      return true;\r\n    } else\r\n      return false;\r\n  }\r\n}\r\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, concatMap, mergeMap, tap } from 'rxjs/operators';\nimport { TokenService } from '../services/token.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private tokenService: TokenService){}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if(req.headers.has('exclude_authorization')){\n      req = req.clone({\n        headers: req.headers.delete('exclude_authorization')\n      })\n      return next.handle(req);\n    }\n\n    return this.tokenService.getAuthHeader()\n    .pipe(\n      concatMap((bearerToken: string) => {\n        req = req.clone({\n          headers: req.headers.append('Authorization', bearerToken)\n        });\n        return next.handle(req).pipe(\n          tap(\n            (event) => event,\n            (err) => {\n              if (err instanceof HttpErrorResponse) {\n                if (err.status === 401) {\n                  return this.tokenService.errorHandler(new Error('Unauthorized user'));\n                }\n              }\n              return;\n            }\n          )\n        );\n      }),\n      catchError(() => EMPTY)\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { UnAuthGuard } from './guards/un-auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent, canActivate: [ UnAuthGuard ] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [ AuthGuard ] },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [ AuthGuard ] }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}